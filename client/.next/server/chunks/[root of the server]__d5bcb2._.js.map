{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/speci/Music/MediaSummarize/client/src/app/api/proxy/chat/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\n\r\nexport async function POST(request: Request) {\r\n  const { summary, message } = await request.json();\r\n  console.log('Received summary and message:', { summary, message });\r\n\r\n  try {\r\n    const backendResponse = await fetch('http://localhost:5000/chat', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ summary, message }),\r\n    });\r\n\r\n    if (!backendResponse.ok) {\r\n      const errorText = await backendResponse.text();\r\n      console.error('Backend error:', errorText);\r\n      return NextResponse.json({ error: 'Backend error: ' + errorText }, { status: 500 });\r\n    }\r\n\r\n    const data = await backendResponse.json();\r\n    return NextResponse.json(data);\r\n  } catch (error) {\r\n    console.error('Fetch error:', error);\r\n    return NextResponse.json({ error: 'Failed to fetch chat response' }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe,KAAK,OAAgB;IACzC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,MAAM,QAAQ,IAAI;IAC/C,QAAQ,GAAG,CAAC,iCAAiC;QAAE;QAAS;IAAQ;IAEhE,IAAI;QACF,MAAM,kBAAkB,MAAM,MAAM,8BAA8B;YAChE,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAS;YAAQ;QAC1C;QAEA,IAAI,CAAC,gBAAgB,EAAE,EAAE;YACvB,MAAM,YAAY,MAAM,gBAAgB,IAAI;YAC5C,QAAQ,KAAK,CAAC,kBAAkB;YAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,oBAAoB;YAAU,GAAG;gBAAE,QAAQ;YAAI;QACnF;QAEA,MAAM,OAAO,MAAM,gBAAgB,IAAI;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAgC,GAAG;YAAE,QAAQ;QAAI;IACrF;AACF"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}